name: Build Python Wheels

on:
  push:
    tags:
      - 'v\d+\.\d+\.[0-9a-z]+'

  repository_dispatch:
    types: manual-trigger

jobs:
  build_wheels:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:

    - name: Check out
      uses: actions/checkout@v2
      with:
        fetch-depth: 0  # unshallow fetch for setuptools-scm

    - name: Install Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: '3.8'

    - name: Build wheels (Python 3.7 through 3.9)
      uses: pypa/cibuildwheel@v2.3.1
      with:
        output-dir: dist
      env:
        CIBW_BUILD: "cp37* cp38* cp39*"
        CIBW_ARCHS_MACOS: x86_64 universal2
        CIBW_ARCHS_WINDOWS: AMD64
        CIBW_ARCHS_LINUX: x86_64
        CIBW_MANYLINUX_X86_64_IMAGE: manylinux1
        CIBW_SKIP: "*musllinux*"
        CIBW_ENVIRONMENT: "CFLAGS='-g0'"

    - name: Build wheels (Python 3.10 only)
      uses: pypa/cibuildwheel@v2.3.1
      with:
        output-dir: dist
      env:
        CIBW_BUILD: "cp310*"
        CIBW_ARCHS_MACOS: x86_64 universal2
        CIBW_ARCHS_WINDOWS: AMD64
        CIBW_ARCHS_LINUX: x86_64
        CIBW_MANYLINUX_X86_64_IMAGE: manylinux2010
        CIBW_SKIP: "*musllinux*"
        CIBW_ENVIRONMENT: "CFLAGS='-g0'"

    - name: Build sdist (Ubuntu only)
      if: matrix.os == 'ubuntu-latest'
      run: |
        python -m pip install --upgrade pip
        python -m pip install build>=0.7.0
        python -m build --sdist

    - name: Upload build artifacts
      uses: actions/upload-artifact@v2
      with:
        name: wheelstorage
        path: ./dist/*
        if-no-files-found: error
        retention-days: 30

  publish_release:
    name: Publish Release
    needs: build_wheels
    runs-on: ubuntu-latest

    steps:

    - name: Get date & flat tag
      id: date_tag
      run: |
        export DATE=$(TZ=US/Pacific date +'%B-%d-%Y')
        echo $DATE
        export FLAT_TAG=$(echo ${GITHUB_REF##*/} | sed 's/\.//g')
        echo $FLAT_TAG
        echo ::set-output name=TODAY::$DATE
        echo ::set-output name=VERSION::$FLAT_TAG
      shell: bash

    - name: Download release assets
      uses: actions/download-artifact@v2
      with:
        name: wheelstorage
        path: dist

    - name: Publish dist(s) to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        user: __token__
        password: ${{ secrets.pypi_password }}

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        body: '[Release Notes](https://github.com/adobe-type-tools/psautohint/blob/master/NEWS.md#${{ steps.date_tag.outputs.VERSION }}---${{ steps.date_tag.outputs.TODAY }})'
        prerelease: true
        files: ./dist/*.tar.gz
